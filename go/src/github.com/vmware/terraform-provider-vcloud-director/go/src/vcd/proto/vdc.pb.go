// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/vdc.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateVdcInfo struct {
	Name            string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ProviderVdc     string `protobuf:"bytes,2,opt,name=provider_vdc,json=providerVdc" json:"provider_vdc,omitempty"`
	Description     string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	AllocationModel string `protobuf:"bytes,4,opt,name=allocation_model,json=allocationModel" json:"allocation_model,omitempty"`
	CpuUnits        string `protobuf:"bytes,5,opt,name=cpu_units,json=cpuUnits" json:"cpu_units,omitempty"`
	CpuAllocated    int32  `protobuf:"varint,6,opt,name=cpu_allocated,json=cpuAllocated" json:"cpu_allocated,omitempty"`
	CpuLimit        int32  `protobuf:"varint,7,opt,name=cpu_limit,json=cpuLimit" json:"cpu_limit,omitempty"`
	MemUnits        string `protobuf:"bytes,8,opt,name=mem_units,json=memUnits" json:"mem_units,omitempty"`
	MemAllocated    int32  `protobuf:"varint,9,opt,name=mem_allocated,json=memAllocated" json:"mem_allocated,omitempty"`
	MemLimit        int32  `protobuf:"varint,10,opt,name=mem_limit,json=memLimit" json:"mem_limit,omitempty"`
	NicQuota        int32  `protobuf:"varint,11,opt,name=nic_quota,json=nicQuota" json:"nic_quota,omitempty"`
	NetworkQuota    int32  `protobuf:"varint,12,opt,name=network_quota,json=networkQuota" json:"network_quota,omitempty"`
	VmQuota         int32  `protobuf:"varint,13,opt,name=vm_quota,json=vmQuota" json:"vm_quota,omitempty"`
	// repeated StorageProfile storage_profiles = 14;
	StorageProfiles          string  `protobuf:"bytes,14,opt,name=storage_profiles,json=storageProfiles" json:"storage_profiles,omitempty"`
	ResourceGuaranteedMemory float32 `protobuf:"fixed32,15,opt,name=resource_guaranteed_memory,json=resourceGuaranteedMemory" json:"resource_guaranteed_memory,omitempty"`
	ResourceGuaranteedCpu    float32 `protobuf:"fixed32,16,opt,name=resource_guaranteed_cpu,json=resourceGuaranteedCpu" json:"resource_guaranteed_cpu,omitempty"`
	VcpuInMhz                int32   `protobuf:"varint,17,opt,name=vcpu_in_mhz,json=vcpuInMhz" json:"vcpu_in_mhz,omitempty"`
	IsThinProvision          bool    `protobuf:"varint,18,opt,name=is_thin_provision,json=isThinProvision" json:"is_thin_provision,omitempty"`
	NetworkPoolName          string  `protobuf:"bytes,19,opt,name=network_pool_name,json=networkPoolName" json:"network_pool_name,omitempty"`
	UsesFastProvisioning     bool    `protobuf:"varint,20,opt,name=uses_fast_provisioning,json=usesFastProvisioning" json:"uses_fast_provisioning,omitempty"`
	OverCommitAllowed        bool    `protobuf:"varint,21,opt,name=over_commit_allowed,json=overCommitAllowed" json:"over_commit_allowed,omitempty"`
	VmDiscoveryEnabled       bool    `protobuf:"varint,22,opt,name=vm_discovery_enabled,json=vmDiscoveryEnabled" json:"vm_discovery_enabled,omitempty"`
	IsEnabled                bool    `protobuf:"varint,23,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
}

func (m *CreateVdcInfo) Reset()                    { *m = CreateVdcInfo{} }
func (m *CreateVdcInfo) String() string            { return proto1.CompactTextString(m) }
func (*CreateVdcInfo) ProtoMessage()               {}
func (*CreateVdcInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *CreateVdcInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVdcInfo) GetProviderVdc() string {
	if m != nil {
		return m.ProviderVdc
	}
	return ""
}

func (m *CreateVdcInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateVdcInfo) GetAllocationModel() string {
	if m != nil {
		return m.AllocationModel
	}
	return ""
}

func (m *CreateVdcInfo) GetCpuUnits() string {
	if m != nil {
		return m.CpuUnits
	}
	return ""
}

func (m *CreateVdcInfo) GetCpuAllocated() int32 {
	if m != nil {
		return m.CpuAllocated
	}
	return 0
}

func (m *CreateVdcInfo) GetCpuLimit() int32 {
	if m != nil {
		return m.CpuLimit
	}
	return 0
}

func (m *CreateVdcInfo) GetMemUnits() string {
	if m != nil {
		return m.MemUnits
	}
	return ""
}

func (m *CreateVdcInfo) GetMemAllocated() int32 {
	if m != nil {
		return m.MemAllocated
	}
	return 0
}

func (m *CreateVdcInfo) GetMemLimit() int32 {
	if m != nil {
		return m.MemLimit
	}
	return 0
}

func (m *CreateVdcInfo) GetNicQuota() int32 {
	if m != nil {
		return m.NicQuota
	}
	return 0
}

func (m *CreateVdcInfo) GetNetworkQuota() int32 {
	if m != nil {
		return m.NetworkQuota
	}
	return 0
}

func (m *CreateVdcInfo) GetVmQuota() int32 {
	if m != nil {
		return m.VmQuota
	}
	return 0
}

func (m *CreateVdcInfo) GetStorageProfiles() string {
	if m != nil {
		return m.StorageProfiles
	}
	return ""
}

func (m *CreateVdcInfo) GetResourceGuaranteedMemory() float32 {
	if m != nil {
		return m.ResourceGuaranteedMemory
	}
	return 0
}

func (m *CreateVdcInfo) GetResourceGuaranteedCpu() float32 {
	if m != nil {
		return m.ResourceGuaranteedCpu
	}
	return 0
}

func (m *CreateVdcInfo) GetVcpuInMhz() int32 {
	if m != nil {
		return m.VcpuInMhz
	}
	return 0
}

func (m *CreateVdcInfo) GetIsThinProvision() bool {
	if m != nil {
		return m.IsThinProvision
	}
	return false
}

func (m *CreateVdcInfo) GetNetworkPoolName() string {
	if m != nil {
		return m.NetworkPoolName
	}
	return ""
}

func (m *CreateVdcInfo) GetUsesFastProvisioning() bool {
	if m != nil {
		return m.UsesFastProvisioning
	}
	return false
}

func (m *CreateVdcInfo) GetOverCommitAllowed() bool {
	if m != nil {
		return m.OverCommitAllowed
	}
	return false
}

func (m *CreateVdcInfo) GetVmDiscoveryEnabled() bool {
	if m != nil {
		return m.VmDiscoveryEnabled
	}
	return false
}

func (m *CreateVdcInfo) GetIsEnabled() bool {
	if m != nil {
		return m.IsEnabled
	}
	return false
}

type CreateVdcResult struct {
	Created bool `protobuf:"varint,1,opt,name=created" json:"created,omitempty"`
}

func (m *CreateVdcResult) Reset()                    { *m = CreateVdcResult{} }
func (m *CreateVdcResult) String() string            { return proto1.CompactTextString(m) }
func (*CreateVdcResult) ProtoMessage()               {}
func (*CreateVdcResult) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *CreateVdcResult) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

type DeleteVdcInfo struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteVdcInfo) Reset()                    { *m = DeleteVdcInfo{} }
func (m *DeleteVdcInfo) String() string            { return proto1.CompactTextString(m) }
func (*DeleteVdcInfo) ProtoMessage()               {}
func (*DeleteVdcInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *DeleteVdcInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteVdcResult struct {
	Deleted bool `protobuf:"varint,1,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *DeleteVdcResult) Reset()                    { *m = DeleteVdcResult{} }
func (m *DeleteVdcResult) String() string            { return proto1.CompactTextString(m) }
func (*DeleteVdcResult) ProtoMessage()               {}
func (*DeleteVdcResult) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *DeleteVdcResult) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type ReadVdcInfo struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ReadVdcInfo) Reset()                    { *m = ReadVdcInfo{} }
func (m *ReadVdcInfo) String() string            { return proto1.CompactTextString(m) }
func (*ReadVdcInfo) ProtoMessage()               {}
func (*ReadVdcInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *ReadVdcInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ReadVdcResult struct {
	Name            string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ProviderVdc     string `protobuf:"bytes,2,opt,name=provider_vdc,json=providerVdc" json:"provider_vdc,omitempty"`
	Description     string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	AllocationModel string `protobuf:"bytes,4,opt,name=allocation_model,json=allocationModel" json:"allocation_model,omitempty"`
	CpuUnits        string `protobuf:"bytes,5,opt,name=cpu_units,json=cpuUnits" json:"cpu_units,omitempty"`
	CpuAllocated    int32  `protobuf:"varint,6,opt,name=cpu_allocated,json=cpuAllocated" json:"cpu_allocated,omitempty"`
	CpuLimit        int32  `protobuf:"varint,7,opt,name=cpu_limit,json=cpuLimit" json:"cpu_limit,omitempty"`
	MemUnits        string `protobuf:"bytes,8,opt,name=mem_units,json=memUnits" json:"mem_units,omitempty"`
	MemAllocated    int32  `protobuf:"varint,9,opt,name=mem_allocated,json=memAllocated" json:"mem_allocated,omitempty"`
	MemLimit        int32  `protobuf:"varint,10,opt,name=mem_limit,json=memLimit" json:"mem_limit,omitempty"`
	NicQuota        int32  `protobuf:"varint,11,opt,name=nic_quota,json=nicQuota" json:"nic_quota,omitempty"`
	NetworkQuota    int32  `protobuf:"varint,12,opt,name=network_quota,json=networkQuota" json:"network_quota,omitempty"`
	VmQuota         int32  `protobuf:"varint,13,opt,name=vm_quota,json=vmQuota" json:"vm_quota,omitempty"`
	// repeated StorageProfile storage_profiles = 14;
	StorageProfiles          string  `protobuf:"bytes,14,opt,name=storage_profiles,json=storageProfiles" json:"storage_profiles,omitempty"`
	ResourceGuaranteedMemory float32 `protobuf:"fixed32,15,opt,name=resource_guaranteed_memory,json=resourceGuaranteedMemory" json:"resource_guaranteed_memory,omitempty"`
	ResourceGuaranteedCpu    float32 `protobuf:"fixed32,16,opt,name=resource_guaranteed_cpu,json=resourceGuaranteedCpu" json:"resource_guaranteed_cpu,omitempty"`
	VcpuInMhz                int32   `protobuf:"varint,17,opt,name=vcpu_in_mhz,json=vcpuInMhz" json:"vcpu_in_mhz,omitempty"`
	IsThinProvision          bool    `protobuf:"varint,18,opt,name=is_thin_provision,json=isThinProvision" json:"is_thin_provision,omitempty"`
	NetworkPoolName          string  `protobuf:"bytes,19,opt,name=network_pool_name,json=networkPoolName" json:"network_pool_name,omitempty"`
	UsesFastProvisioning     bool    `protobuf:"varint,20,opt,name=uses_fast_provisioning,json=usesFastProvisioning" json:"uses_fast_provisioning,omitempty"`
	OverCommitAllowed        bool    `protobuf:"varint,21,opt,name=over_commit_allowed,json=overCommitAllowed" json:"over_commit_allowed,omitempty"`
	VmDiscoveryEnabled       bool    `protobuf:"varint,22,opt,name=vm_discovery_enabled,json=vmDiscoveryEnabled" json:"vm_discovery_enabled,omitempty"`
	IsEnabled                bool    `protobuf:"varint,23,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	Present                  bool    `protobuf:"varint,24,opt,name=present" json:"present,omitempty"`
}

func (m *ReadVdcResult) Reset()                    { *m = ReadVdcResult{} }
func (m *ReadVdcResult) String() string            { return proto1.CompactTextString(m) }
func (*ReadVdcResult) ProtoMessage()               {}
func (*ReadVdcResult) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *ReadVdcResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReadVdcResult) GetProviderVdc() string {
	if m != nil {
		return m.ProviderVdc
	}
	return ""
}

func (m *ReadVdcResult) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ReadVdcResult) GetAllocationModel() string {
	if m != nil {
		return m.AllocationModel
	}
	return ""
}

func (m *ReadVdcResult) GetCpuUnits() string {
	if m != nil {
		return m.CpuUnits
	}
	return ""
}

func (m *ReadVdcResult) GetCpuAllocated() int32 {
	if m != nil {
		return m.CpuAllocated
	}
	return 0
}

func (m *ReadVdcResult) GetCpuLimit() int32 {
	if m != nil {
		return m.CpuLimit
	}
	return 0
}

func (m *ReadVdcResult) GetMemUnits() string {
	if m != nil {
		return m.MemUnits
	}
	return ""
}

func (m *ReadVdcResult) GetMemAllocated() int32 {
	if m != nil {
		return m.MemAllocated
	}
	return 0
}

func (m *ReadVdcResult) GetMemLimit() int32 {
	if m != nil {
		return m.MemLimit
	}
	return 0
}

func (m *ReadVdcResult) GetNicQuota() int32 {
	if m != nil {
		return m.NicQuota
	}
	return 0
}

func (m *ReadVdcResult) GetNetworkQuota() int32 {
	if m != nil {
		return m.NetworkQuota
	}
	return 0
}

func (m *ReadVdcResult) GetVmQuota() int32 {
	if m != nil {
		return m.VmQuota
	}
	return 0
}

func (m *ReadVdcResult) GetStorageProfiles() string {
	if m != nil {
		return m.StorageProfiles
	}
	return ""
}

func (m *ReadVdcResult) GetResourceGuaranteedMemory() float32 {
	if m != nil {
		return m.ResourceGuaranteedMemory
	}
	return 0
}

func (m *ReadVdcResult) GetResourceGuaranteedCpu() float32 {
	if m != nil {
		return m.ResourceGuaranteedCpu
	}
	return 0
}

func (m *ReadVdcResult) GetVcpuInMhz() int32 {
	if m != nil {
		return m.VcpuInMhz
	}
	return 0
}

func (m *ReadVdcResult) GetIsThinProvision() bool {
	if m != nil {
		return m.IsThinProvision
	}
	return false
}

func (m *ReadVdcResult) GetNetworkPoolName() string {
	if m != nil {
		return m.NetworkPoolName
	}
	return ""
}

func (m *ReadVdcResult) GetUsesFastProvisioning() bool {
	if m != nil {
		return m.UsesFastProvisioning
	}
	return false
}

func (m *ReadVdcResult) GetOverCommitAllowed() bool {
	if m != nil {
		return m.OverCommitAllowed
	}
	return false
}

func (m *ReadVdcResult) GetVmDiscoveryEnabled() bool {
	if m != nil {
		return m.VmDiscoveryEnabled
	}
	return false
}

func (m *ReadVdcResult) GetIsEnabled() bool {
	if m != nil {
		return m.IsEnabled
	}
	return false
}

func (m *ReadVdcResult) GetPresent() bool {
	if m != nil {
		return m.Present
	}
	return false
}

type UpdateVdcInfo struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	IsEnabled bool   `protobuf:"varint,2,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
}

func (m *UpdateVdcInfo) Reset()                    { *m = UpdateVdcInfo{} }
func (m *UpdateVdcInfo) String() string            { return proto1.CompactTextString(m) }
func (*UpdateVdcInfo) ProtoMessage()               {}
func (*UpdateVdcInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *UpdateVdcInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateVdcInfo) GetIsEnabled() bool {
	if m != nil {
		return m.IsEnabled
	}
	return false
}

type UpdateVdcResult struct {
	Updated bool `protobuf:"varint,1,opt,name=updated" json:"updated,omitempty"`
}

func (m *UpdateVdcResult) Reset()                    { *m = UpdateVdcResult{} }
func (m *UpdateVdcResult) String() string            { return proto1.CompactTextString(m) }
func (*UpdateVdcResult) ProtoMessage()               {}
func (*UpdateVdcResult) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *UpdateVdcResult) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func init() {
	proto1.RegisterType((*CreateVdcInfo)(nil), "proto.CreateVdcInfo")
	proto1.RegisterType((*CreateVdcResult)(nil), "proto.CreateVdcResult")
	proto1.RegisterType((*DeleteVdcInfo)(nil), "proto.DeleteVdcInfo")
	proto1.RegisterType((*DeleteVdcResult)(nil), "proto.DeleteVdcResult")
	proto1.RegisterType((*ReadVdcInfo)(nil), "proto.ReadVdcInfo")
	proto1.RegisterType((*ReadVdcResult)(nil), "proto.ReadVdcResult")
	proto1.RegisterType((*UpdateVdcInfo)(nil), "proto.UpdateVdcInfo")
	proto1.RegisterType((*UpdateVdcResult)(nil), "proto.UpdateVdcResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Vdc service

type VdcClient interface {
	// create a Vdc
	Create(ctx context.Context, in *CreateVdcInfo, opts ...grpc.CallOption) (*CreateVdcResult, error)
	// delete a Vdc
	Delete(ctx context.Context, in *DeleteVdcInfo, opts ...grpc.CallOption) (*DeleteVdcResult, error)
	// Read Vdc
	Read(ctx context.Context, in *ReadVdcInfo, opts ...grpc.CallOption) (*ReadVdcResult, error)
	// Update Vdc
	Update(ctx context.Context, in *UpdateVdcInfo, opts ...grpc.CallOption) (*UpdateVdcResult, error)
}

type vdcClient struct {
	cc *grpc.ClientConn
}

func NewVdcClient(cc *grpc.ClientConn) VdcClient {
	return &vdcClient{cc}
}

func (c *vdcClient) Create(ctx context.Context, in *CreateVdcInfo, opts ...grpc.CallOption) (*CreateVdcResult, error) {
	out := new(CreateVdcResult)
	err := grpc.Invoke(ctx, "/proto.Vdc/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vdcClient) Delete(ctx context.Context, in *DeleteVdcInfo, opts ...grpc.CallOption) (*DeleteVdcResult, error) {
	out := new(DeleteVdcResult)
	err := grpc.Invoke(ctx, "/proto.Vdc/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vdcClient) Read(ctx context.Context, in *ReadVdcInfo, opts ...grpc.CallOption) (*ReadVdcResult, error) {
	out := new(ReadVdcResult)
	err := grpc.Invoke(ctx, "/proto.Vdc/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vdcClient) Update(ctx context.Context, in *UpdateVdcInfo, opts ...grpc.CallOption) (*UpdateVdcResult, error) {
	out := new(UpdateVdcResult)
	err := grpc.Invoke(ctx, "/proto.Vdc/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Vdc service

type VdcServer interface {
	// create a Vdc
	Create(context.Context, *CreateVdcInfo) (*CreateVdcResult, error)
	// delete a Vdc
	Delete(context.Context, *DeleteVdcInfo) (*DeleteVdcResult, error)
	// Read Vdc
	Read(context.Context, *ReadVdcInfo) (*ReadVdcResult, error)
	// Update Vdc
	Update(context.Context, *UpdateVdcInfo) (*UpdateVdcResult, error)
}

func RegisterVdcServer(s *grpc.Server, srv VdcServer) {
	s.RegisterService(&_Vdc_serviceDesc, srv)
}

func _Vdc_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVdcInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VdcServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Vdc/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VdcServer).Create(ctx, req.(*CreateVdcInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vdc_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVdcInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VdcServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Vdc/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VdcServer).Delete(ctx, req.(*DeleteVdcInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vdc_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadVdcInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VdcServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Vdc/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VdcServer).Read(ctx, req.(*ReadVdcInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vdc_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVdcInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VdcServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Vdc/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VdcServer).Update(ctx, req.(*UpdateVdcInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Vdc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Vdc",
	HandlerType: (*VdcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Vdc_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Vdc_Delete_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _Vdc_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Vdc_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/vdc.proto",
}

func init() { proto1.RegisterFile("proto/vdc.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 715 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xcd, 0x4e, 0xdb, 0x4c,
	0x14, 0x25, 0xfc, 0xe4, 0x67, 0x42, 0xbe, 0xc0, 0x10, 0x60, 0x3e, 0xaa, 0x56, 0xc1, 0x6c, 0x42,
	0x2b, 0xd1, 0x8a, 0x56, 0x55, 0x17, 0xdd, 0x50, 0x68, 0x2b, 0xa4, 0x52, 0xa5, 0x51, 0x61, 0x6b,
	0x99, 0x99, 0x0b, 0x19, 0xd5, 0xe3, 0x71, 0x3d, 0x63, 0x23, 0x78, 0x92, 0xbe, 0x61, 0xdf, 0xa2,
	0xaa, 0xe6, 0xc7, 0x4e, 0x42, 0x11, 0xdd, 0x75, 0xc5, 0x2a, 0xbe, 0xe7, 0x9c, 0x7b, 0x1c, 0xdf,
	0xcc, 0x3d, 0x31, 0xea, 0xa6, 0x99, 0xd4, 0xf2, 0x79, 0xc1, 0xe8, 0x9e, 0xbd, 0xc2, 0x4b, 0xf6,
	0x23, 0xf8, 0x55, 0x47, 0x9d, 0xc3, 0x0c, 0x22, 0x0d, 0x67, 0x8c, 0x1e, 0x27, 0x17, 0x12, 0x63,
	0xb4, 0x98, 0x44, 0x02, 0x48, 0xad, 0x5f, 0x1b, 0xb4, 0x46, 0xf6, 0x1a, 0x6f, 0xa3, 0xe5, 0x34,
	0x93, 0x05, 0x67, 0x90, 0x85, 0x05, 0xa3, 0x64, 0xde, 0x72, 0xed, 0x12, 0x3b, 0x63, 0x14, 0xf7,
	0x51, 0x9b, 0x81, 0xa2, 0x19, 0x4f, 0x35, 0x97, 0x09, 0x59, 0x70, 0x8a, 0x29, 0x08, 0xef, 0xa2,
	0x95, 0x28, 0x8e, 0x25, 0x8d, 0x4c, 0x15, 0x0a, 0xc9, 0x20, 0x26, 0x8b, 0x56, 0xd6, 0x9d, 0xe0,
	0x27, 0x06, 0xc6, 0x8f, 0x50, 0x8b, 0xa6, 0x79, 0x98, 0x27, 0x5c, 0x2b, 0xb2, 0x64, 0x35, 0x4d,
	0x9a, 0xe6, 0xa7, 0xa6, 0xc6, 0x3b, 0xa8, 0x63, 0x48, 0xdf, 0x03, 0x8c, 0xd4, 0xfb, 0xb5, 0xc1,
	0xd2, 0x68, 0x99, 0xa6, 0xf9, 0x41, 0x89, 0x95, 0x0e, 0x31, 0x17, 0x5c, 0x93, 0x86, 0x15, 0x18,
	0x87, 0x4f, 0xa6, 0x36, 0xa4, 0x00, 0xe1, 0xed, 0x9b, 0xce, 0x5e, 0x80, 0xa8, 0xec, 0x0d, 0x39,
	0xb1, 0x6f, 0x39, 0x7b, 0x01, 0x62, 0xc6, 0xde, 0x88, 0x9c, 0x3d, 0x72, 0xf6, 0x02, 0x44, 0x65,
	0x9f, 0x70, 0x1a, 0x7e, 0xcf, 0xa5, 0x8e, 0x48, 0xdb, 0x91, 0x09, 0xa7, 0x5f, 0x4c, 0x6d, 0xec,
	0x13, 0xd0, 0x57, 0x32, 0xfb, 0xe6, 0x05, 0xcb, 0xce, 0xde, 0x83, 0x4e, 0xf4, 0x3f, 0x6a, 0x16,
	0xc2, 0xf3, 0x1d, 0xcb, 0x37, 0x0a, 0xe1, 0xa8, 0x5d, 0xb4, 0xa2, 0xb4, 0xcc, 0xa2, 0x4b, 0x08,
	0xd3, 0x4c, 0x5e, 0xf0, 0x18, 0x14, 0xf9, 0xcf, 0x4d, 0xd1, 0xe3, 0x43, 0x0f, 0xe3, 0xb7, 0x68,
	0x2b, 0x03, 0x25, 0xf3, 0x8c, 0x42, 0x78, 0x99, 0x47, 0x59, 0x94, 0x68, 0x00, 0x16, 0x0a, 0x10,
	0x32, 0xbb, 0x26, 0xdd, 0x7e, 0x6d, 0x30, 0x3f, 0x22, 0xa5, 0xe2, 0x63, 0x25, 0x38, 0xb1, 0x3c,
	0x7e, 0x8d, 0x36, 0xef, 0xea, 0xa6, 0x69, 0x4e, 0x56, 0x6c, 0xeb, 0xfa, 0x9f, 0xad, 0x87, 0x69,
	0x8e, 0x9f, 0xa0, 0x76, 0x61, 0x46, 0xcf, 0x93, 0x50, 0x8c, 0x6f, 0xc8, 0xaa, 0xfd, 0xfa, 0x2d,
	0x03, 0x1d, 0x27, 0x27, 0xe3, 0x1b, 0xfc, 0x14, 0xad, 0x72, 0x15, 0xea, 0x31, 0x4f, 0x42, 0x7b,
	0x7e, 0x94, 0x39, 0x2e, 0xb8, 0x5f, 0x1b, 0x34, 0x47, 0x5d, 0xae, 0xbe, 0x8e, 0x79, 0x32, 0x2c,
	0x61, 0xa3, 0x2d, 0x87, 0x95, 0x4a, 0x19, 0x87, 0xf6, 0x60, 0xae, 0xb9, 0xa7, 0xf5, 0xc4, 0x50,
	0xca, 0xf8, 0xb3, 0x39, 0xa3, 0xaf, 0xd0, 0x46, 0xae, 0x40, 0x85, 0x17, 0x91, 0xd2, 0x13, 0x67,
	0x9e, 0x5c, 0x92, 0x9e, 0x35, 0xef, 0x19, 0xf6, 0x43, 0xa4, 0xf4, 0x70, 0x8a, 0xc3, 0x7b, 0x68,
	0x4d, 0x16, 0x90, 0x85, 0x54, 0x0a, 0xc1, 0xb5, 0xfd, 0xd5, 0xaf, 0x80, 0x91, 0x75, 0xdb, 0xb2,
	0x6a, 0xa8, 0x43, 0xcb, 0x1c, 0x38, 0x02, 0xbf, 0x40, 0xbd, 0x42, 0x84, 0x8c, 0x2b, 0x6a, 0xb8,
	0xeb, 0x10, 0x92, 0xe8, 0x3c, 0x06, 0x46, 0x36, 0x6c, 0x03, 0x2e, 0xc4, 0x51, 0x49, 0xbd, 0x77,
	0x0c, 0x7e, 0x8c, 0x10, 0x57, 0x95, 0x6e, 0xd3, 0xea, 0x5a, 0x5c, 0x79, 0x3a, 0x78, 0x86, 0xba,
	0xd5, 0xfe, 0x8d, 0x40, 0xe5, 0xb1, 0xc6, 0x04, 0x35, 0xa8, 0x85, 0x98, 0x5d, 0xc2, 0xe6, 0xa8,
	0x2c, 0x83, 0x1d, 0xd4, 0x39, 0x82, 0x18, 0xee, 0x5d, 0x56, 0xe3, 0x58, 0x89, 0x26, 0x8e, 0xcc,
	0x42, 0x95, 0xa3, 0x2f, 0x83, 0x6d, 0xd4, 0x1e, 0x41, 0xc4, 0xee, 0xf3, 0xfb, 0xd1, 0x40, 0x1d,
	0xaf, 0xf1, 0x76, 0x0f, 0x11, 0xf1, 0x10, 0x11, 0x0f, 0x11, 0xf1, 0xaf, 0x22, 0xc2, 0x6c, 0x6f,
	0x9a, 0x81, 0x82, 0x44, 0x13, 0xe2, 0xb6, 0xd7, 0x97, 0xc1, 0x3b, 0xd4, 0x39, 0x4d, 0xd9, 0x5f,
	0xfe, 0xbc, 0x67, 0xdd, 0xe7, 0xef, 0x08, 0xa0, 0xca, 0x63, 0x12, 0x17, 0xb9, 0x85, 0xaa, 0xb8,
	0xf0, 0xe5, 0xfe, 0xcf, 0x1a, 0x5a, 0x30, 0xab, 0xfc, 0x06, 0xd5, 0x5d, 0x6a, 0xe1, 0x9e, 0x7b,
	0x9f, 0xd8, 0x9b, 0x79, 0x89, 0xd8, 0xda, 0xb8, 0x8d, 0x3a, 0xe7, 0x60, 0xce, 0x74, 0xba, 0x74,
	0xaa, 0x3a, 0x67, 0x12, 0xad, 0xea, 0xbc, 0x15, 0x61, 0xc1, 0x1c, 0xde, 0x47, 0x8b, 0x26, 0x86,
	0x30, 0xf6, 0x8a, 0xa9, 0xdc, 0xda, 0xea, 0xcd, 0x62, 0xd3, 0x77, 0x73, 0x0f, 0x57, 0xdd, 0x6d,
	0x66, 0x5e, 0xd5, 0xdd, 0x6e, 0x4d, 0x20, 0x98, 0x3b, 0xaf, 0x5b, 0xe2, 0xe5, 0xef, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x4e, 0x56, 0xf0, 0xf8, 0x39, 0x09, 0x00, 0x00,
}
